services:
  postgres:
    extends:
      file: docker-compose-postgres-base.yaml
      service: postgres-base
    container_name: postgres
    volumes:
      - .data/postgres/:/var/lib/postgresql/data

  webserver:
    build:
      context: .
      dockerfile: webserver/Dockerfile
    environment:
      RABBIT_MQ_HOST: "rabbitmq"
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_INCOMING: "incoming_timers"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: 5432
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    ports:
      - "8000-8001:8000"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      timer-network:
        aliases:
          - webserver-1
          - webserver-2
    depends_on:
      - rabbitmq

  lb-webserver:
    build: load-balancers/webserver
    container_name: load-balancer-webserver
    ports:
      - "80:80"
    networks:
      - timer-network
    depends_on:
      - webserver

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - timer-network
    volumes:
      - .data/rabbitmq/:/var/lib/rabbitmq

  timer-db-1:
    extends:
      file: docker-compose-postgres-base.yaml
      service: postgres-base
    container_name: timer-db-1
    volumes:
      - .data/timer-db-1/:/var/lib/postgresql/data

  timer-db-2:
    extends:
      file: docker-compose-postgres-base.yaml
      service: postgres-base
    container_name: timer-db-2
    volumes:
      - .data/timer-db-2/:/var/lib/postgresql/data

  consumer-1:
    extends:
      file: docker-compose-consumer-base.yaml
      service: consumer
    container_name: consumer-1
    environment:
      TIMER_DB_HOST: timer-db-1
    depends_on:
      - postgres
      - timer-db-1
      - rabbitmq

  consumer-2:
    extends:
      file: docker-compose-consumer-base.yaml
      service: consumer
    container_name: consumer-2
    environment:
      TIMER_DB_HOST: timer-db-2
    depends_on:
      - postgres
      - timer-db-2
      - rabbitmq

  timer-1:
    extends:
      file: docker-compose-timer-base.yaml
      service: timer
    container_name: timer-1
    environment:
      TIMER_DB_HOST: "timer-db-1"
    depends_on:
      - timer-db-1
      - rabbitmq

  timer-2:
    extends:
      file: docker-compose-timer-base.yaml
      service: timer
    container_name: timer-2
    environment:
      TIMER_DB_HOST: "timer-db-2"
    depends_on:
      - timer-db-2
      - rabbitmq

  trigger:
    build:
      context: .
      dockerfile: trigger/Dockerfile
    environment:
      RABBIT_MQ_HOST: "rabbitmq"
      RABBIT_MQ_PORT: 5672
      RABBIT_MQ_TO_FIRE: "timers_to_fire"
      RABBIT_MQ_RECONNECTING_INTERVAL: 5
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    networks:
      - timer-network
    depends_on:
      - rabbitmq

networks:
  timer-network:
